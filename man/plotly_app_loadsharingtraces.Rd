% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotly_app_loadsharingtraces.R
\name{plotly_app_loadsharingtraces}
\alias{plotly_app_loadsharingtraces}
\title{Creates plotly for peak reinforcements as function of load sharing}
\usage{
plotly_app_loadsharingtraces(dt, dp, nsignif = 3)
}
\arguments{
\item{dt}{dataframe with fields for a range of load sharing parameters
(`betaF`), the normalised reinforcement according to the FBMc model
(`kk_fbmc`) and the normalised reinforcement according to the FBMcw
model (`kk_fbmcw`).}

\item{dp}{dataframe with fields for existing load sharing parameters
(`betaF`), the name of this load sharing rule (`loadsharing'), the
normalised reinforcement according to the FBMc model (`kk_fbmc`) and
the normalised reinforcement according to the FBMcw model (`kk_fbmcw`).}

\item{nsignif}{number of significant digits in plotly hover labels
(integer scalar)}
}
\value{
plotly object
}
\description{
This function generates a plotly object showing how peak root reinforcement
changes as function of the load sharing parameter `betaF`. It plots results
for a range of `betaF` for both the FBMc and FBMcw models. Load sharing
assumptions of existing load sharing rules are highlighted
}
\examples{
dtrace <- data.frame(
  betaF = seq(0, 1, l = 51),
  kk_fbmc = seq(0, 1, l = 51)^2,
  kk_fbmcw = seq(0, 1, l = 51)^0.5
)
drules <- data.frame(
  loadsharing = c('test1', 'test2'),
  betaF = c(0.5, 0.8),
  kk_fbmc = c(0.5, 0.8)^2,
  kk_fbmcw = c(0.5, 0.8)^0.5
)
plotly_app_loadsharingtraces(dtrace, drules, nsignif = 2)
}
